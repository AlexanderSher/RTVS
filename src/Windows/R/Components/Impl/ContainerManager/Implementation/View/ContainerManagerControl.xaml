<UserControl x:Class="Microsoft.R.Components.ContainerManager.Implementation.View.ContainerManagerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:components="clr-namespace:Microsoft.R.Components"
             xmlns:controls="clr-namespace:Microsoft.Common.Wpf.Controls;assembly=Microsoft.R.Common.Wpf"
             xmlns:rwpf="clr-namespace:Microsoft.R.Wpf;assembly=Microsoft.R.Wpf"
             xmlns:rcontrols="clr-namespace:Microsoft.R.Wpf.Controls;assembly=Microsoft.R.Wpf"
             xmlns:viewModel="clr-namespace:Microsoft.R.Components.ContainerManager.Implementation.ViewModel"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:imagecatalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             mc:Ignorable="d" x:Name="Self"
             d:DesignHeight="600" d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <rwpf:CommonResources />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="TextBoxSingleLineStyle" TargetType="{x:Type Control}">
                <Setter Property="ClipToBounds" Value="True" />
                <Setter Property="Margin" Value="0,0,0,6" />
                <Setter Property="Background" Value="{DynamicResource {x:Static rwpf:Brushes.BackgroundBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static rwpf:Brushes.UITextKey}}" />
            </Style>

            <Style x:Key="ButtonStartStyle" TargetType="Button" BasedOn="{StaticResource ToolWindowButtonStyle}">
                <EventSetter Event="Click" Handler="ButtonStart_Click" />
                <Setter Property="IsEnabled" Value="{Binding Path=IsRunning, Converter={x:Static rwpf:Converters.Not}}" />
                <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <TextBlock Text="{Binding Path=Name, StringFormat={x:Static components:Resources.ContainerManager_StartTooltip_Format}}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="AutomationProperties.Name" Value="{Binding Path=Name, StringFormat={x:Static components:Resources.ContainerManager_StartTooltip_Format}}" />
            </Style>

            <Style x:Key="ButtonStopStyle" TargetType="Button" BasedOn="{StaticResource ToolWindowButtonStyle}">
                <EventSetter Event="Click" Handler="ButtonStop_Click" />
                <Setter Property="IsEnabled" Value="{Binding Path=IsRunning}" />
                <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                <Setter Property="Margin" Value="0,0,8,0" />
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <TextBlock Text="{Binding Path=Name, StringFormat={x:Static components:Resources.ContainerManager_StopTooltip_Format}}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="AutomationProperties.Name" Value="{Binding Path=Name, StringFormat={x:Static components:Resources.ContainerManager_StopTooltip_Format}}" />
            </Style>

            <Style x:Key="ButtonDeleteStyle" TargetType="Button" BasedOn="{StaticResource ToolWindowButtonStyle}">
                <EventSetter Event="Click" Handler="ButtonDelete_Click" />
                <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <TextBlock Text="{Binding Path=Name, StringFormat={x:Static components:Resources.ContainerManager_DeleteTooltip_Format}}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="AutomationProperties.Name" Value="{Binding Path=Name, StringFormat={x:Static components:Resources.ContainerManager_DeleteTooltip_Format}}" />
            </Style>

            <DataTemplate DataType="{x:Type viewModel:ContainerViewModel}">
                <Border BorderThickness="0,0,0,0" 
                        BorderBrush="{DynamicResource {x:Static rwpf:Brushes.ActiveBorderKey}}" x:Name="Container">
                    <Grid MinHeight="20" Background="{DynamicResource {x:Static rwpf:Brushes.ToolWindowBackgroundBrushKey}}" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- Name  -->
                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,1,6,2" Text="{Binding Path=Name}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>
                        
                        <!-- Start button -->
                        <Button x:Name="ButtonStart" Grid.Row="0" Grid.Column="1" Style="{StaticResource ButtonStartStyle}">
                            <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static imagecatalog:KnownMonikers.Play}"
                                                Grayscale="{Binding Path=IsRunning}"/>
                        </Button>

                        <!-- Stop button -->
                        <Button x:Name="ButtonStop" Grid.Row="0" Grid.Column="2" Style="{StaticResource ButtonStopStyle}">
                            <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static imagecatalog:KnownMonikers.Stop}"
                                                Grayscale="{Binding Path=IsRunning, Converter={x:Static rwpf:Converters.Not}}"/>
                        </Button>

                        <!-- Delete button -->
                        <Button x:Name="ButtonDelete" Grid.Row="0" Grid.Column="3" Style="{StaticResource ButtonDeleteStyle}">
                            <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static imagecatalog:KnownMonikers.Cancel}" />
                        </Button>

                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="CreateLocalDockerDataTemplate" DataType="{x:Type viewModel:CreateLocalDockerViewModel}">
                <Grid Margin="16,8,0,8" PreviewKeyUp="AddLocalDocker_PreviewKeyUp" Background="{DynamicResource {x:Static rwpf:Brushes.ToolWindowBackgroundBrushKey}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <imaging:CrispImage Grid.Row="0" Grid.Column="0" Style="{StaticResource ValidityIndicatorStyle}"
                                        rwpf:AttachedProperties.IsValid="{Binding Path=IsNameValid}"/>

                    <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource TextBoxSingleLineStyle}"
                             Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             rcontrols:Watermark.TextBoxHint="{x:Static components:Resources.ContainerManager_CreateLocalDocker_Name}"
                             ToolTip="{x:Static components:Resources.ContainerManager_CreateLocalDocker_Name}"
                             AutomationProperties.Name="{x:Static components:Resources.ContainerManager_CreateLocalDocker_Name}"/>

                    <imaging:CrispImage Grid.Row="1" Grid.Column="0" Style="{StaticResource ValidityIndicatorStyle}"
                                        rwpf:AttachedProperties.IsValid="{Binding Path=IsUsernameValid}"/>

                    <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource TextBoxSingleLineStyle}" 
                             Text="{Binding Path=Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             rcontrols:Watermark.TextBoxHint="{x:Static components:Resources.ContainerManager_CreateLocalDocker_UserName}"
                             ToolTip="{x:Static components:Resources.ContainerManager_CreateLocalDocker_UserName}"
                             AutomationProperties.Name="{x:Static components:Resources.ContainerManager_CreateLocalDocker_UserName}"/>

                    <imaging:CrispImage Grid.Row="2" Grid.Column="0" Style="{StaticResource ValidityIndicatorStyle}"
                                        rwpf:AttachedProperties.IsValid="{Binding Path=IsPasswordValid}"/>

                    <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource TextBoxSingleLineStyle}"
                             Text="{Binding Path=Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             rcontrols:Watermark.TextBoxHint="{x:Static components:Resources.ContainerManager_CreateLocalDocker_Password}"
                             ToolTip="{x:Static components:Resources.ContainerManager_CreateLocalDocker_Version}"
                             AutomationProperties.Name="{x:Static components:Resources.ContainerManager_CreateLocalDocker_Version}" />

                    <imaging:CrispImage Grid.Row="3" Grid.Column="0" Style="{StaticResource ValidityIndicatorStyle}"
                                        rwpf:AttachedProperties.IsValid="{Binding Path=IsVersionValid}"/>

                    <TextBox Grid.Row="3" Grid.Column="1" Style="{StaticResource TextBoxSingleLineStyle}" 
                             Text="{Binding Path=Version, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             rcontrols:Watermark.TextBoxHint="{x:Static components:Resources.ContainerManager_CreateLocalDocker_Version}"
                             ToolTip="{x:Static components:Resources.ContainerManager_CreateLocalDocker_Version}"
                             AutomationProperties.Name="{x:Static components:Resources.ContainerManager_CreateLocalDocker_Version}" />

                    <WrapPanel Grid.Row="4" Grid.Column="1" Margin="0,0,0,0">
                        <Button Margin="-1,0,4,0" Padding="6,2,6,2" MinWidth="75" MinHeight="23"
                                VerticalAlignment="Center" Click="ButtonCreateLocalDocker_Click" 
                                Style="{StaticResource ToolWindowButtonStyle}"  ToolTipService.ShowOnDisabled="True"
                                Content="{x:Static components:Resources.ContainerManager_CreateLocalDocker}" 
                                ToolTip="{x:Static components:Resources.ContainerManager_CreateTooltip}"
                                IsEnabled="{Binding Path=IsValid}"
                                AutomationProperties.Name="{x:Static components:Resources.ContainerManager_CreateTooltip}">
                        </Button>

                        <Button VerticalAlignment="Center" Click="ButtonCancelCreateLocalDocker_Click" Style="{StaticResource HyperlinkButton}"
                                Content="{x:Static components:Resources.ContainerManager_Cancel}" IsCancel="True" 
                                AutomationProperties.Name="{x:Static components:Resources.ContainerManager_Cancel}"/>

                    </WrapPanel>
                </Grid>
            </DataTemplate>

            <Style x:Key="ExpandCollapseButtonLocalDockerStyle" TargetType="{x:Type controls:ExpandCollapseButton}" BasedOn="{StaticResource ExpandCollapseButtonStyle}">
                <Setter Property="IsExpanded" Value="True" />
                <Setter Property="Content" Value="{x:Static components:Resources.ConnectionManager_LocalConnections}" />
                <Setter Property="Visibility" Value="{Binding Path=HasLocalConnections, Converter={x:Static rwpf:Converters.TrueIsNotCollapsed}}" />
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <TextBlock Text="{x:Static components:Resources.ConnectionManager_LocalConnections_Tooltip}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="AutomationProperties.Name" Value="{x:Static components:Resources.ConnectionManager_LocalConnections_Tooltip}" />
            </Style>

            <Style x:Key="ContainersListBoxItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource FillingListBoxItemStyle}">
                <EventSetter Event="PreviewKeyUp" Handler="Container_PreviewKeyUp" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border BorderThickness="0" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static rwpf:Brushes.ControlLinkTextHoverKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="ContainersListBox" TargetType="{x:Type ListBox}" BasedOn="{StaticResource ToolWindowListBoxStyle}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource ContainersListBoxItemStyle}" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer x:Name="Root" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <DockPanel x:Name="RootContent" LastChildFill="True" MinWidth="250" >
            <DockPanel.MaxWidth>
                <MultiBinding Converter="{x:Static rwpf:Converters.Max}">
                    <Binding ElementName="Root" Path="ActualWidth" />
                    <Binding ElementName="RootContent" Path="MinWidth" />
                </MultiBinding>
            </DockPanel.MaxWidth>

            <DockPanel DockPanel.Dock="Top" Margin="16,0,0,0"
                       Background="{DynamicResource {x:Static rwpf:Brushes.ToolWindowBackgroundBrushKey}}">
                <WrapPanel DockPanel.Dock="Top" Margin="1,4,0,6">
                    <Button x:Name="ButtonShowWorkspaces" Margin="-6,0,0,0" MinWidth="75" MinHeight="23"
                            VerticalAlignment="Center" Click="ButtonShowWorkspaces_Click" 
                            Style="{StaticResource ToolWindowButtonStyle}"
                            Content="{x:Static components:Resources.ContainerManager_ShowWorkspaces}" 
                            AutomationProperties.Name="{x:Static components:Resources.ContainerManager_ShowWorkspaces}" />
                </WrapPanel>
            </DockPanel>

            <!-- Local docker containers header -->
            <controls:ExpandCollapseButton x:Name="ToggleButtonLocalDocker" Style="{StaticResource ExpandCollapseButtonLocalDockerStyle}" DockPanel.Dock="Top" />

            <!-- Add local docker containers -->
            <Button x:Name="ToggleButtonAddLocalDocker" DockPanel.Dock="Top" Style="{StaticResource HyperlinkDownArrowButton}" Margin="17,4,6,0"
                    Visibility="{Binding ElementName=ToggleButtonLocalDocker, Path=IsExpanded, Converter={x:Static rwpf:Converters.TrueIsNotCollapsed}}"
                    IsEnabled="{Binding Path=NewLocalDocker, Converter={x:Static rwpf:Converters.NullIsTrue}}"
                    Content="{x:Static components:Resources.ContainerManager_CreateLocalDocker}" AutomationProperties.Name="{x:Static components:Resources.ContainerManager_CreateLocalDocker}"
                    Click="ButtonAdd_Click" />

            <Border DockPanel.Dock="Top">
                <Border.Visibility>
                    <MultiBinding Converter="{x:Static rwpf:Converters.AllIsNotCollapsed}">
                        <Binding ElementName="ToggleButtonLocalDocker" Path="IsExpanded"/>
                        <Binding Path="NewLocalDocker" Converter="{x:Static rwpf:Converters.NullIsFalse}" />    
                    </MultiBinding>
                </Border.Visibility>
                <ContentPresenter Content="{Binding Path=NewLocalDocker, Mode=OneWay}" ContentTemplate="{StaticResource CreateLocalDockerDataTemplate}" />
            </Border>

            <!-- Local docker containers -->
            <ListBox x:Name="ListLocalDocker" DockPanel.Dock="Top" Style="{StaticResource ContainersListBox}" Margin="11,0,6,16" ItemsSource="{Binding Path=LocalContainers}" 
                     Visibility="{Binding ElementName=ToggleButtonLocalDocker, Path=IsExpanded, Converter={x:Static rwpf:Converters.TrueIsNotCollapsed}}"/>
        </DockPanel>
    </ScrollViewer>
</UserControl>

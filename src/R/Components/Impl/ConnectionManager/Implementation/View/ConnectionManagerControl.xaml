<UserControl x:Class="Microsoft.R.Components.ConnectionManager.Implementation.View.ConnectionManagerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:rwpf="clr-namespace:Microsoft.R.Wpf;assembly=Microsoft.R.Wpf"
             xmlns:components="clr-namespace:Microsoft.R.Components"
             xmlns:designTime="clr-namespace:Microsoft.R.Components.ConnectionManager.Implementation.View.DesignTime"
             xmlns:viewModel="clr-namespace:Microsoft.R.Components.ConnectionManager.ViewModel"
             mc:Ignorable="d" x:Name="Self"
             d:DataContext="{d:DesignInstance Type=designTime:DesignTimeConnectionManagerViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="600" d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <rwpf:CommonResources />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type viewModel:IConnectionViewModel}">
                <Border BorderThickness="0,0,0,0" BorderBrush="{DynamicResource {x:Static rwpf:Brushes.ActiveBorderKey}}" Background="Transparent" x:Name="Container">
                    <Grid MinHeight="20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- Connect button -->
                        <Button x:Name="ButtonConnect" Grid.Column="0" Style="{StaticResource ToolWindowButtonStyle}" Click="ButtonConnect_Click" 
                                VerticalAlignment="Center" Margin="14,1,6,1" Padding="0" BorderThickness="0"
                                Visibility="{Binding Path=IsConnected, Converter={x:Static rwpf:Converters.TrueIsCollapsed}}">
                            <Button.ToolTip>
                                <TextBlock Text="{Binding Path=Name, StringFormat={x:Static components:Resources.ConnectionManager_ConnectTooltip}}" />
                            </Button.ToolTip>
                            <Grid>
                                <Grid Visibility="{Binding Path=IsActive, Converter={x:Static rwpf:Converters.FalseIsNotCollapsed}}">
                                    <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRLocalInactive}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.TrueIsCollapsed}}" />
                                    <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRCloudInactive}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.FalseIsCollapsed}}"/>
                                </Grid>
                                <Grid Visibility="{Binding Path=IsActive, Converter={x:Static rwpf:Converters.TrueIsNotCollapsed}}">
                                    <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRLocalDisconnected}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.TrueIsCollapsed}}" />
                                    <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRCloudDisconnected}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.FalseIsCollapsed}}"/>
                                </Grid>
                            </Grid>
                        </Button>

                        <!-- Connected icon -->
                        <Grid Grid.Column="0" Visibility="{Binding Path=IsConnected, Converter={x:Static rwpf:Converters.FalseIsCollapsed}}" VerticalAlignment="Center" Margin="14,1,6,1">
                            <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRLocalConnected}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.TrueIsCollapsed}}" />
                            <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRCloudConnected}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.FalseIsCollapsed}}"/>
                        </Grid>

                        <!-- Name & path -->
                        <TextBlock Grid.Column="1" Margin="0,0,6,3" Text="{Binding Path=Name}"/>
                        <Separator Grid.Column="2" Margin="0,0,6,3" Style="{StaticResource VerticalSeparator}"/>
                        <TextBlock Grid.Column="3" Margin="0,0,3,3" Text="{Binding Path=Path, Mode=OneWay}"
                                   TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>

                        <!-- edit button -->
                        <Button x:Name="ButtonEdit" Grid.Column="4" Style="{StaticResource ToolWindowButtonStyle}" Click="ButtonEdit_Click"
                                ToolTip="{x:Static components:Resources.ConnectionManager_DeleteTooltip}"
                                Visibility="Collapsed">
                            <Image Source="{x:Static rwpf:ImageSources.Edit}" />
                        </Button>

                        <!-- delete button -->
                        <Button x:Name="ButtonDelete" Grid.Column="5" Style="{StaticResource ToolWindowButtonStyle}" Click="ButtonDelete_Click"
                                ToolTip="{x:Static components:Resources.ConnectionManager_DeleteTooltip}" Visibility="Collapsed">
                            <Rectangle Fill="{StaticResource IconUninstall}" Width="16" Height="16" />
                        </Button>
                    </Grid>
                </Border>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Visibility" TargetName="ButtonEdit" Value="Visible" />
                        <Setter Property="Visibility" TargetName="ButtonDelete" Value="Visible" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="ConnectionsListBox" TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="{x:Static Brushes.Transparent}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static rwpf:Brushes.UITextKey}}" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="true" />
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
                <Setter Property="VirtualizingPanel.CacheLength" Value="1,2" />
                <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Page"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="BorderThickness" Value="0,0,0,0" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource FillingListBoxItemStyle}" />
                <Setter Property="ItemTemplateSelector" Value="{StaticResource TypeDataTemplateSelector}"/>
                <Setter Property="ItemsSource" Value="{Binding Path=Items}" />
                <Setter Property="SelectedItem" Value="{Binding Path=SelectedConnection, Mode=OneWay}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                                <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer x:Name="Root" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <DockPanel x:Name="RootContent" LastChildFill="True" MinWidth="250">
            <DockPanel.MaxWidth>
                <MultiBinding Converter="{x:Static rwpf:Converters.Max}">
                    <Binding ElementName="Root" Path="ActualWidth" />
                    <Binding ElementName="RootContent" Path="MinWidth" />
                </MultiBinding>
            </DockPanel.MaxWidth>

            <!-- Implicit local connections -->

            <!-- Explicit connections -->
            <Grid DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <!-- Header -->
                <ToggleButton Grid.Column="0" Grid.Row="0" Style="{StaticResource ExpandCollapseToggleStyle}" ToolTip="Expand/Collapse section"
                              IsChecked="True"/>

                <TextBlock Grid.Row="0" Grid.Column="1" Margin="1,0,0,0" VerticalAlignment="Center"
                           TextTrimming="CharacterEllipsis" Text="Connections" FontWeight="SemiBold" />

                <!-- Clone options panel -->
                <Border x:Uid="cloneOptionsBorder" Grid.Row="1" Margin="6,0,6,6" Style="{StaticResource EmbeddedDialog}">
                    <Border.Visibility>
                        <MultiBinding Converter="{StaticResource AnyTrueToVisibleConverter}">
                            <MultiBinding.Bindings>
                                <Binding Path="ShowCloneOptions"/>
                                <Binding Path="JobProgressVm.IsProgressPaneDisplayed"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Border.Visibility>

                    <Grid x:Uid="cloneOptionsGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Uid="cloneRemoteRow" Height="Auto"/>
                            <RowDefinition x:Uid="clonePathRow" Height="Auto"/>
                            <RowDefinition x:Uid="cloneRecursiveRow" Height="Auto"/>
                            <RowDefinition x:Uid="cloneActionsRow" Height="Auto"/>
                            <RowDefinition x:Uid="cloneProgressRow" Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Uid="cloneFirstCol" Width="*"/>
                            <ColumnDefinition x:Uid="cloneSecondCol" Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <tfcwpf:LabeledTextBox x:Uid="cloneRemoteUrlTextBox" x:Name="cloneRemoteUrlTextBox"
                                       Grid.Row="0" Grid.Column="0" Margin="0,0,0,6"
                                       Text="{Binding Path=CloneRemoteUrlText, Mode=TwoWay}"
                                       HintText="Enter the URL of a Git repo to clone &lt;Required&gt;"
                                       NameAndAutomationId="Clone Remote"
                                       Localization.Attributes="HintText (Modifiable Readable Text) NameAndAutomationId (Modifiable Readable Text)"
                                       IsRequired="true"
                                       AcceptsReturn="false"
                                       Visibility="{Binding Path=JobProgressVm.IsProgressPaneDisplayed, Converter={StaticResource TrueToVisibleConverter}, ConverterParameter=Invert}">
                            <tfcwpf:LabeledTextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding Path=CloneRepositoryCommand}"/>
                            </tfcwpf:LabeledTextBox.InputBindings>
                        </tfcwpf:LabeledTextBox>

                        <tfcwpf:LabeledTextBox x:Uid="clonePathTextBox" x:Name="clonePathTextBox"
                                       Grid.Row="1" Grid.Column="0" Margin="0,0,0,6"
                                       Text="{Binding Path=CloneRepoPathText, Mode=TwoWay}"
                                       HintText="Enter a path for the cloned Git repo &lt;Required&gt;"
                                       NameAndAutomationId="Clone Path"
                                       Localization.Attributes="HintText (Modifiable Readable Text) NameAndAutomationId (Modifiable Readable Text)"
                                       IsRequired="true"
                                       AcceptsReturn="false"
                                       Visibility="{Binding Path=JobProgressVm.IsProgressPaneDisplayed, Converter={StaticResource TrueToVisibleConverter}, ConverterParameter=Invert}">
                            <tfcwpf:LabeledTextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding Path=CloneRepositoryCommand}"/>
                            </tfcwpf:LabeledTextBox.InputBindings>
                        </tfcwpf:LabeledTextBox>

                        <Button x:Uid="cloneBrowseButton" Grid.Row="1" Grid.Column="1"
                        Margin="3,0,0,6" Padding="2,0,2,0" MinWidth="0" MinHeight="0" VerticalAlignment="Stretch"
                        AutomationProperties.Name="Browse for Folder"
                        Content="..." Localization.Attributes="Content (Unmodifiable Readable Text) Content (Modifiable Readable Text)"
                        Command="{Binding Path=BrowseForFolderCommand, RelativeSource={RelativeSource AncestorType={x:Type local:RepositoryListSectionView}}}"
                        Visibility="{Binding Path=JobProgressVm.IsProgressPaneDisplayed, Converter={StaticResource TrueToVisibleConverter}, ConverterParameter=Invert}"/>

                        <CheckBox x:Uid="cloneRecurseCheckBox" x:Name="cloneRecurseCheckBox" Grid.Row="2" Grid.Column="0" Margin="0,0,0,6"
                          Content="Recursively Clone Submodules" Localization.Attributes="Text (Modifiable Readable Text)"
                          IsChecked="{Binding Path=CloneRecurseSubmodules, Mode=TwoWay}"
                          Visibility="{Binding Path=JobProgressVm.IsProgressPaneDisplayed, Converter={StaticResource TrueToVisibleConverter}, ConverterParameter=Invert}">
                            <AutomationProperties.Name>Recursive</AutomationProperties.Name>
                        </CheckBox>

                        <!-- Clone Actions -->
                        <WrapPanel x:Uid="cloneActionsPanel" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,0,0"
                           Visibility="{Binding Path=JobProgressVm.IsProgressPaneDisplayed, Converter={StaticResource TrueToVisibleConverter}, ConverterParameter=Invert}">
                            <Button x:Uid="cloneButton"
                            x:Name="cloneButton"
                            Margin="0"
                            Padding="6,2,6,2"
                            MinWidth="75"
                            MinHeight="23"
                            VerticalAlignment="Center"
                            Command="{Binding Path=CloneRepositoryCommand}">_Clone</Button>

                            <tfcte:TextLink x:Uid="cancelCloneLink" VerticalAlignment="Center" Margin="6,0,0,0"
                                    Text="Cancel" Localization.Attributes="Text (Modifiable Readable Text)"
                                    Command="{Binding Path=CancelCloneOptionsCommand}"/>
                        </WrapPanel>

                        <!-- Clone Progress -->
                        <gitCommonControls:LabeledProgress x:Uid="cloneProgress"
                                                   Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,0,0"
                                                   Visibility="{Binding Path=JobProgressVm.IsProgressPaneDisplayed, Converter={StaticResource TrueToVisibleConverter}}"
                                                   MaxProgressValue="{Binding Path=JobProgressVm.ProgressTotal}"
                                                   ProgressValue="{Binding Path=JobProgressVm.ProgressCurrent}"
                                                   BottomLabel="{Binding Path=JobProgressVm.Message}"
                                                   CancelCommand="{Binding Path=JobProgressVm.CancelCurrentOperationCommand}"
                                                   IndeterminateProgress="{Binding Path=JobProgressVm.IsProgressIndeterminate}"
												   IsCancelable="{Binding Path=JobProgressVm.IsCancellationSupported}"
                                                   TopLabel="{Binding Path=JobProgressVm.Label}" />
                    </Grid>
                </Border>

                <!-- List -->
                <Grid Grid.Row="2" Grid.Column="1">
                    <ListBox x:Name="List" Style="{StaticResource ConnectionsListBox}" SelectionChanged="List_SelectionChanged" />
                </Grid>

                <!-- right side -->
                <Grid Grid.Row="2" Margin="24,8,7,8" DataContext="{Binding Path=SelectedConnection}" 
                      Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="6" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!-- row 0 -->
                    <TextBlock Grid.Row="0" Grid.Column="0" FontWeight="Bold" 
                                   Text="{x:Static components:Resources.ConnectionManager_Name}" />

                    <TextBox Grid.Row="0" Grid.Column="2" VerticalAlignment="Top" VerticalContentAlignment="Center"
                                 Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <!-- row 2 -->
                    <TextBlock Grid.Row="2" Grid.Column="0" FontWeight="Bold" 
                                   Text="{x:Static components:Resources.ConnectionManager_Path}" />

                    <TextBox Grid.Row="2" Grid.Column="2" VerticalAlignment="Top" VerticalContentAlignment="Center"
                                 Text="{Binding Path=Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <!-- row 4 -->
                    <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" FontWeight="Bold" 
                                   Text="{x:Static components:Resources.ConnectionManager_RCommandLineArguments}" />

                    <TextBox Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Top" VerticalContentAlignment="Center"
                                 Text="{Binding Path=RCommandLineArguments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <!-- row 6 -->
                    <Grid Grid.Row="8" ColumnSpan="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Row="8" Grid.Column="1" MinWidth="80" MinHeight="24" HorizontalAlignment="Left" Click="ButtonCancel_Click"
                                    Content="{x:Static components:Resources.ConnectionManager_Cancel}" IsEnabled="{Binding Path=HasChanges}" />
                        <Button Grid.Row="8" Grid.Column="3" MinWidth="80" MinHeight="24" HorizontalAlignment="Left" Click="ButtonSave_Click"
                                    Content="{x:Static components:Resources.ConnectionManager_Save}" IsEnabled="{Binding Path=HasChanges}" />
                        <Button Grid.Row="8" Grid.Column="5" MinWidth="80" MinHeight="24" HorizontalAlignment="Left" Click="ButtonConnect_Click"
                                    Content="{x:Static components:Resources.ConnectionManager_Connect}">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{x:Static rwpf:Converters.All}">
                                    <Binding Path="CanConnect" />
                                    <Binding Path="IsConnected" Converter="{x:Static rwpf:Converters.Not}" />
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                    </Grid>

                </Grid>
            </Grid>
        </DockPanel>
    </ScrollViewer>
</UserControl>

<UserControl x:Class="Microsoft.R.Components.ConnectionManager.Implementation.View.ConnectionManagerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:rwpf="clr-namespace:Microsoft.R.Wpf;assembly=Microsoft.R.Wpf"
             xmlns:components="clr-namespace:Microsoft.R.Components"
             xmlns:designTime="clr-namespace:Microsoft.R.Components.ConnectionManager.Implementation.View.DesignTime"
             xmlns:viewModel="clr-namespace:Microsoft.R.Components.ConnectionManager.ViewModel"
             xmlns:controls="clr-namespace:Microsoft.R.Wpf.Controls;assembly=Microsoft.R.Wpf"
             mc:Ignorable="d" x:Name="Self"
             d:DataContext="{d:DesignInstance Type=designTime:DesignTimeConnectionManagerViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="600" d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <rwpf:CommonResources />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="InputTextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="MaxLines" Value="10" />
                <Setter Property="ClipToBounds" Value="True" />
                <Setter Property="Margin" Value="0,0,0,6" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}, Converter={x:Static rwpf:Converters.NullOrEmptyIsTrue}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static rwpf:Brushes.InfoBackgroundKey}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="EditConnectionDataTemplate" DataType="{x:Type viewModel:IConnectionViewModel}">
                <AdornerDecorator>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Row="0" Grid.Column="0" Style="{StaticResource InputTextBoxStyle}"
                                     Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     controls:Watermark.TextBoxHint="{x:Static components:Resources.ConnectionManager_Name}" />

                        <TextBox Grid.Row="1" Grid.Column="0" Style="{StaticResource InputTextBoxStyle}" 
                                     Text="{Binding Path=Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     controls:Watermark.TextBoxHint="{x:Static components:Resources.ConnectionManager_Path}" />

                        <Button Grid.Row="1" Grid.Column="1" Margin="3,0,0,6" Padding="2,0,2,0" Content="..." 
                                    VerticalAlignment="Stretch" MinHeight="0" MinWidth="0" Click="ButtonPath_Click"/>

                        <TextBox Grid.Row="2" Grid.Column="0" Style="{StaticResource InputTextBoxStyle}" 
                                     Text="{Binding Path=RCommandLineArguments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     controls:Watermark.TextBoxHint="{x:Static components:Resources.ConnectionManager_RCommandLineArguments}" />

                        <WrapPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,0,0">
                            <Button Margin="0,0,4,0" Padding="6,2,6,2" MinWidth="75" MinHeight="23"
                                    VerticalAlignment="Center" Click="ButtonSave_Click" 
                                    IsEnabled="{Binding Path=IsValid}"
                                    Content="{x:Static components:Resources.ConnectionManager_Save}" />

                            <Button VerticalAlignment="Center" Click="ButtonTestConnection_Click"
                                    Style="{StaticResource HyperlinkButton}"
                                    IsEnabled="{Binding Path=IsValid}"
                                    Content="{x:Static components:Resources.ConnectionManager_TestConnection}"
                                    ToolTip="{x:Static components:Resources.ConnectionManager_TestConnectionTooltip}"/>

                            <Separator Margin="4,4,4,3" BorderThickness="0"
                                       Style="{StaticResource VerticalSeparator}" 
                                       Background="{DynamicResource {x:Static rwpf:Brushes.ControlLinkTextKey}}"/>

                            <Button VerticalAlignment="Center" Click="ButtonCancel_Click"
                                        Style="{StaticResource HyperlinkButton}"
                                        Content="{x:Static components:Resources.ConnectionManager_Cancel}"/>

                        </WrapPanel>
                    </Grid>
                </AdornerDecorator>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:IConnectionViewModel}">
                <Border BorderThickness="0,0,0,0" BorderBrush="{DynamicResource {x:Static rwpf:Brushes.ActiveBorderKey}}" Background="Transparent" x:Name="Container">
                    <Grid MinHeight="20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- Connect button -->
                        <Button x:Name="ButtonConnect" Grid.Column="0" Style="{StaticResource ToolWindowButtonStyle}" Click="ButtonConnect_Click" 
                                VerticalAlignment="Center" Margin="14,1,6,1" Padding="0" BorderThickness="0"
                                Visibility="{Binding Path=IsConnected, Converter={x:Static rwpf:Converters.TrueIsCollapsed}}">
                            <Button.ToolTip>
                                <TextBlock Text="{Binding Path=Name, StringFormat={x:Static components:Resources.ConnectionManager_ConnectTooltip}}" />
                            </Button.ToolTip>
                            <Grid>
                                <Grid Visibility="{Binding Path=IsActive, Converter={x:Static rwpf:Converters.FalseIsNotCollapsed}}">
                                    <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRLocalInactive}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.TrueIsCollapsed}}" />
                                    <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRCloudInactive}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.FalseIsCollapsed}}"/>
                                </Grid>
                                <Grid Visibility="{Binding Path=IsActive, Converter={x:Static rwpf:Converters.TrueIsNotCollapsed}}">
                                    <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRLocalDisconnected}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.TrueIsCollapsed}}" />
                                    <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRCloudDisconnected}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.FalseIsCollapsed}}"/>
                                </Grid>
                            </Grid>
                        </Button>

                        <!-- Connected icon -->
                        <Grid Grid.Column="0" Visibility="{Binding Path=IsConnected, Converter={x:Static rwpf:Converters.FalseIsCollapsed}}" VerticalAlignment="Center" Margin="14,1,6,1">
                            <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRLocalConnected}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.TrueIsCollapsed}}" />
                            <Rectangle Width="18" Height="18" SnapsToDevicePixels="True" Fill="{StaticResource IconRCloudConnected}" Visibility="{Binding Path=IsRemote, Converter={x:Static rwpf:Converters.FalseIsCollapsed}}"/>
                        </Grid>

                        <!-- Name & path -->
                        <TextBlock Grid.Column="1" Margin="0,1,6,2" Text="{Binding Path=Name}"/>
                        <Separator Grid.Column="2" Margin="0,1,6,2" Style="{StaticResource VerticalSeparator}"/>
                        <TextBlock Grid.Column="3" Margin="0,1,3,2" Text="{Binding Path=Path, Mode=OneWay}"
                                   TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>

                        <!-- edit button -->
                        <Button x:Name="ButtonEdit" Grid.Column="4" Style="{StaticResource ToolWindowButtonStyle}" Click="ButtonEdit_Click"
                                ToolTip="{x:Static components:Resources.ConnectionManager_DeleteTooltip}"
                                Visibility="Collapsed">
                            <Image Source="{x:Static rwpf:ImageSources.Edit}" />
                        </Button>

                        <!-- delete button -->
                        <Button x:Name="ButtonDelete" Grid.Column="5" Style="{StaticResource ToolWindowButtonStyle}" Click="ButtonDelete_Click"
                                ToolTip="{x:Static components:Resources.ConnectionManager_DeleteTooltip}" Visibility="Collapsed">
                            <Rectangle Fill="{StaticResource IconUninstall}" Width="16" Height="16" />
                        </Button>
                    </Grid>
                </Border>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Visibility" TargetName="ButtonEdit" Value="Visible" />
                        <Setter Property="Visibility" TargetName="ButtonDelete" Value="Visible" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="ConnectionsListBoxItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource FillingListBoxItemStyle}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Border" BorderThickness="0" Background="{TemplateBinding Background}"
                                    Padding="0" SnapsToDevicePixels="true">
                                <StackPanel>
                                    <ContentPresenter x:Name="RegularContentPresenter"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <ContentPresenter x:Name="SelectedContentPresenter"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      ContentTemplate="{StaticResource EditConnectionDataTemplate}"
                                                      Visibility="Collapsed"/>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- set the background for IsEnabled == false -->
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static rwpf:Brushes.ListPaneBackgroundKey}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static rwpf:Brushes.ContentMouseOverBrushKey}}" />
                                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static rwpf:Brushes.ContentMouseOverTextBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Visibility" TargetName="RegularContentPresenter" Value="Collapsed" />
                                    <Setter Property="Visibility" TargetName="SelectedContentPresenter" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="ConnectionsListBox" TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="{x:Static Brushes.Transparent}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static rwpf:Brushes.UITextKey}}" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="true" />
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
                <Setter Property="VirtualizingPanel.CacheLength" Value="1,2" />
                <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Page"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="BorderThickness" Value="0,0,0,0" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource ConnectionsListBoxItemStyle}" />
                <Setter Property="ItemTemplateSelector" Value="{StaticResource TypeDataTemplateSelector}"/>
                <Setter Property="ItemsSource" Value="{Binding Path=Items}" />
                <Setter Property="SelectedItem" Value="{Binding Path=SelectedConnection, Mode=OneWay}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                                <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="InputBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static rwpf:Brushes.WindowTextKey}}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="6" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer x:Name="Root" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <DockPanel x:Name="RootContent" LastChildFill="True" MinWidth="250">
            <DockPanel.MaxWidth>
                <MultiBinding Converter="{x:Static rwpf:Converters.Max}">
                    <Binding ElementName="Root" Path="ActualWidth" />
                    <Binding ElementName="RootContent" Path="MinWidth" />
                </MultiBinding>
            </DockPanel.MaxWidth>

            <!-- Implicit local connections -->

            <!-- Header -->
            <ToggleButton x:Name="ToggleButtonConnections" DockPanel.Dock="Top" Style="{StaticResource ExpandCollapseToggleStyle}"
                          ToolTip="Expand/Collapse section" IsChecked="True" Content="Connections"/>

            <!-- Explicit connections -->
            <DockPanel DockPanel.Dock="Top" Margin="16,0,0,0" 
                       Visibility="{Binding ElementName=ToggleButtonConnections, Path=IsChecked, Converter={x:Static rwpf:Converters.TrueIsNotCollapsed}}">
                <WrapPanel DockPanel.Dock="Top" Margin="1,4,0,6">
                    <Button x:Name="ToggleButtonAdd" Style="{StaticResource HyperlinkDownArrowButton}"
                            IsEnabled="{Binding Path=NewConnection, Converter={x:Static rwpf:Converters.NullIsTrue}}"
                            Content="{x:Static components:Resources.ConnectionManager_Add}"
                            Click="ButtonAdd_Click"/>
                </WrapPanel>
                
                <!-- Add options panel -->
                <Border DockPanel.Dock="Top" Margin="0,0,6,6" Style="{StaticResource InputBorderStyle}"
                        Visibility="{Binding Path=NewConnection, Converter={x:Static rwpf:Converters.NullIsCollapsed}}">
                    <ContentPresenter DataContext="{Binding Path=NewConnection}" ContentTemplate="{StaticResource EditConnectionDataTemplate}" />
                </Border>

                <!-- List -->
                <Grid DockPanel.Dock="Top">
                    <ListBox x:Name="List" Style="{StaticResource ConnectionsListBox}" SelectionChanged="List_SelectionChanged" />
                </Grid>
            </DockPanel>
        </DockPanel>
    </ScrollViewer>
</UserControl>

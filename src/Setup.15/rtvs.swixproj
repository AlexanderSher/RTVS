<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props"
        Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />

  <PropertyGroup Condition="'$(NuGetPackageRoot)' == ''">
    <NuGetPackageRoot>$(UserProfile)\.nuget\packages\</NuGetPackageRoot>
  </PropertyGroup>
  <Import Project="$(NuGetPackageRoot)\MicroBuild.Core\0.2.0\build\MicroBuild.Core.props"
          Condition="Exists('$(NuGetPackageRoot)\MicroBuild.Core\0.2.0\build\MicroBuild.Core.props')" />

  <Import Project="..\R.Settings.targets" />

  <PropertyGroup>
    <ProjectGuid>7994EBF7-60E6-49F0-8205-59607B889C41</ProjectGuid>
    <SchemaVersion>2.0</SchemaVersion>
    <OutputArchitecture>neutral</OutputArchitecture>
    <OutputLocalized>false</OutputLocalized>
    <OutputName>RTVS</OutputName>
    <OutputType>Vsix</OutputType>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <IsPackage>true</IsPackage>
  </PropertyGroup>

  <PropertyGroup>
    <OutputPath>$(BinDirectory)\$(Configuration)\</OutputPath>
  </PropertyGroup>

  <!-- Needed for the MicroBuild signing plugin -->
  <!--<ItemGroup>
    <SigningTarget Include="$(OutDir)\$(OutputName)"/>
    <FilesToSign Include="@(SigningTarget)">
      <Authenticode>Vsix</Authenticode>
    </FilesToSign>
  </ItemGroup>-->

  <ItemGroup>
    <Package Include="files.swr" />
  </ItemGroup>

  <Target Name="SetVsixProperties" BeforeTargets="Build">
    <PropertyGroup>
      <!-- Variables added here will be usable in the swr file.  This is a semi colon delimited
           list of name=value items.  Use $(name) in the swr file to reference the variable.
      -->
      <PackagePreprocessorDefinitions>$(PackagePreprocessorDefinitions);BinPath=$(OutputPath);Version=$(BuildVersion)</PackagePreprocessorDefinitions>
    </PropertyGroup>
  </Target>
  
  <!-- MicroBuild plugin fails if GetNativeManifest is not found for some reason -->
  <!--<Target Name="GetNativeManifest" />-->

  <Import Project="$(NuGetPackageRoot)\MicroBuild.Core\0.2.0\build\MicroBuild.Core.targets"
          Condition="Exists('$(NuGetPackageRoot)\MicroBuild.Core\0.2.0\build\MicroBuild.Core.targets')" />

</Project>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdvancedEditorOptions" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="EditorName" xml:space="preserve">
    <value>R Language Editor</value>
  </data>
  <data name="LanguageName" xml:space="preserve">
    <value>R</value>
  </data>
  <data name="UndoActionFormatDocument" xml:space="preserve">
    <value>Format Document</value>
  </data>
  <data name="Settings_CompletionCategory" xml:space="preserve">
    <value>Completion</value>
  </data>
  <data name="Settings_EnableSyntaxCheck" xml:space="preserve">
    <value>Show syntax errors</value>
  </data>
  <data name="Settings_EnableSyntaxCheck_Description" xml:space="preserve">
    <value>Enable automatic syntax checking in the code</value>
  </data>
  <data name="Settings_FormattingCategory" xml:space="preserve">
    <value>Formatting</value>
  </data>
  <data name="Settings_FormatOnPaste" xml:space="preserve">
    <value>Format on paste</value>
  </data>
  <data name="Settings_FormatOnPaste_Description" xml:space="preserve">
    <value>Automatically format and indent code fragment on paste</value>
  </data>
  <data name="Settings_BracesExpanded" xml:space="preserve">
    <value>Expanded braces</value>
  </data>
  <data name="Settings_BracesExpanded_Description" xml:space="preserve">
    <value>Place open curly brace on a new line</value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="Settings_AutoFormat" xml:space="preserve">
    <value>Automatic formatting</value>
  </data>
  <data name="Settings_AutoFormat_Description" xml:space="preserve">
    <value>Reformat code as you type</value>
  </data>
  <data name="SaveAsFilterR" xml:space="preserve">
    <value>R Language Files (*.r)|*.r|All Files (*.*)|*.*</value>
  </data>
  <data name="Temp_SettingDescription" xml:space="preserve">
    <value>Setting description</value>
  </data>
  <data name="Temp_SettingDisplayName" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="Settings_IntellisenseCategory" xml:space="preserve">
    <value>IntelliSense</value>
  </data>
  <data name="Settings_ShowInternalFunctions" xml:space="preserve">
    <value>Show internal functions</value>
  </data>
  <data name="Settings_ShowInternalFunctions_Description" xml:space="preserve">
    <value>Show internal functions (functions beginning with dot) in the statement completion list</value>
  </data>
  <data name="Settings_ShowTclFunctions" xml:space="preserve">
    <value>Show TCL functions</value>
  </data>
  <data name="Settings_ShowTclFunctions_Description" xml:space="preserve">
    <value>Show functions from TCL/TK package in the statement completion list</value>
  </data>
  <data name="Settings_CommitOnSpace" xml:space="preserve">
    <value>Commit on Space key</value>
  </data>
  <data name="Settings_CommitOnSpace_Description" xml:space="preserve">
    <value>Commit intellisense selection when Space key is pressed</value>
  </data>
  <data name="Settings_SpaceAfterComma" xml:space="preserve">
    <value>Space after comma</value>
  </data>
  <data name="Settings_SpaceAfterComma_Description" xml:space="preserve">
    <value>Insert space after comma in function arguments</value>
  </data>
  <data name="Settings_SpaceAfterKeyword" xml:space="preserve">
    <value>Space after keyword</value>
  </data>
  <data name="Settings_SpaceAfterKeyword_Description" xml:space="preserve">
    <value>Insert space after keyword and before opening brace such as in case of 'if', 'while', 'repeat'</value>
  </data>
  <data name="ReplWindowName" xml:space="preserve">
    <value>R Interactive</value>
  </data>
  <data name="Settings_SyntaxCheckCategory" xml:space="preserve">
    <value>Syntax check</value>
  </data>
  <data name="Settings_ReplCategory" xml:space="preserve">
    <value>Interactive window</value>
  </data>
  <data name="Settings_SendToRepl" xml:space="preserve">
    <value>'Send to R Console' shortcut</value>
  </data>
  <data name="Settings_SendToRepl_Description" xml:space="preserve">
    <value>Override editor 'insert empty line above' command and use Control+Enter for sending editor selection to R Console instead. Keyboard bindings can also be change in Tools &gt; Options &gt; Environment &gt; Keyboard.</value>
  </data>
  <data name="Error_Microsoft_R_Host_Missing" xml:space="preserve">
    <value>Microsoft.R.Host.exe is missing. Click OK to open download link in the default browser.</value>
  </data>
  <data name="SaveAsFilterMD" xml:space="preserve">
    <value>Markdown Files (*.md;*.rmd;*.markdown)|*.md;*.rmd;*.markdown|All Files (*.*)|*.*</value>
  </data>
  <data name="CtrlECtrlE" xml:space="preserve">
    <value>Control+E, Control+E</value>
  </data>
  <data name="CtrlEnter" xml:space="preserve">
    <value>Control+Enter</value>
  </data>
  <data name="MicrosoftRHostStopped" xml:space="preserve">
    <value>R Host process is stopped. Click Reset to start a new one.</value>
  </data>
  <data name="MicrosoftRHostStopping" xml:space="preserve">
    <value>Stopping R Session...</value>
  </data>
  <data name="InputIsTooLong" xml:space="preserve">
    <value>Input is too long - no more than {0} characters expected.</value>
  </data>
  <data name="Settings_ReplSyntaxCheck" xml:space="preserve">
    <value>Syntax check in R Console</value>
  </data>
  <data name="Settings_ReplSyntaxCheck_Description" xml:space="preserve">
    <value>Turns on or off live code syntax check in R Console window. Syntax check may not work correctly in multi-line statements.</value>
  </data>
  <data name="OutputWindowName_InstallPackages" xml:space="preserve">
    <value>R Packages</value>
  </data>
  <data name="OutputWindowName_Publish" xml:space="preserve">
    <value>R Publish</value>
  </data>
  <data name="Error_CannotDeleteFile" xml:space="preserve">
    <value>Unable to delete file {0}. Exception: {1}.</value>
  </data>
  <data name="Error_MarkdownConversionFailed" xml:space="preserve">
    <value>Markdown conversion failed</value>
  </data>
  <data name="Error_PackageMissing" xml:space="preserve">
    <value>This operation requires package {0} which is not installed or has been removed. </value>
  </data>
  <data name="PlotWindowCaption" xml:space="preserve">
    <value>R Plot</value>
  </data>
  <data name="EmptyPlotWindowWatermark" xml:space="preserve">
    <value>Run plotting command in R Interactive Window, or open file</value>
  </data>
  <data name="OpenPlotDialogTitle" xml:space="preserve">
    <value>Open R Plot File</value>
  </data>
  <data name="PlotFileFilter" xml:space="preserve">
    <value>R Plot Files (*.vsplot)|*.vsplot|All Files (*.*)|*.*</value>
  </data>
  <data name="CannotOpenPlotFile" xml:space="preserve">
    <value>Unable to open plot file. Exception: {0}</value>
  </data>
  <data name="MicrosoftRHostStarting" xml:space="preserve">
    <value>Starting R Session...</value>
  </data>
  <data name="SavePlotDialogTitle" xml:space="preserve">
    <value>Save R Plot File</value>
  </data>
  <data name="LoadWorkspaceIntoGlobalEnvironment" xml:space="preserve">
    <value>Do you want to load the R data file "{0}" into the global environment?</value>
  </data>
  <data name="LoadWorkspaceFailedMessageFormat" xml:space="preserve">
    <value>Load workspace from {0} failed:
{1}</value>
  </data>
  <data name="LoadWorkspaceTitle" xml:space="preserve">
    <value>Load Workspace</value>
  </data>
  <data name="SaveWorkspaceAsTitle" xml:space="preserve">
    <value>Save Workspace As</value>
  </data>
  <data name="SaveWorkspaceFailedMessageFormat" xml:space="preserve">
    <value>Save workspace into {0} failed:
{1}</value>
  </data>
  <data name="WorkspaceFileFilter" xml:space="preserve">
    <value>R Data Files (*.rdata)|*.rdata|All Files (*.*)|*.*</value>
  </data>
  <data name="Settings_CommitOnEnter" xml:space="preserve">
    <value>Commit on Enter key</value>
  </data>
  <data name="Settings_CommitOnEnter_Description" xml:space="preserve">
    <value>Commit intellisense selection when Enter key is pressed</value>
  </data>
  <data name="Settings_TriggerOnFirstChar" xml:space="preserve">
    <value>Intellisense list on first character</value>
  </data>
  <data name="Settings_TriggerOnFirstChar_Description" xml:space="preserve">
    <value>Show intellisense list on first character typed. If set to off, completion list can be invoked by typing one or more characters and pressing Tab or by invoking Edit &gt; IntelliSense &gt; List Members command</value>
  </data>
  <data name="VariableWindowCaption" xml:space="preserve">
    <value>Variable Explorer</value>
  </data>
  <data name="Settings_PartialArgumentNameMatch" xml:space="preserve">
    <value>Match partially typed argument names</value>
  </data>
  <data name="Settings_PartialArgumentNameMatch_Description" xml:space="preserve">
    <value>When typing argument name in a function call, signature help shows description for the argument that is the best match</value>
  </data>
  <data name="Error_RestartVsAfterRInstalled" xml:space="preserve">
    <value>R for Windows is found. Please restart Visual Studio for changes to take effect.</value>
  </data>
  <data name="CranMirrorListRequestCanceled" xml:space="preserve">
    <value>Unable to download CRAN mirror list. The request has been canceled.</value>
  </data>
  <data name="Settings_GeneralCategory" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Settings_CranMirror" xml:space="preserve">
    <value>CRAN Mirror</value>
  </data>
  <data name="Settings_CranMirror_Description" xml:space="preserve">
    <value>Default CRAN mirror for package installations</value>
  </data>
  <data name="Settings_RVersion" xml:space="preserve">
    <value>R Engine (64-bit)</value>
  </data>
  <data name="Settings_RVersion_Description" xml:space="preserve">
    <value>Version of R to use (64-bit only).</value>
  </data>
  <data name="Settings_RVersion_Latest" xml:space="preserve">
    <value>[Latest]</value>
  </data>
  <data name="RPromptClassification" xml:space="preserve">
    <value>R Interactive Prompts</value>
  </data>
</root>
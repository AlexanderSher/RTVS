<ResourceDictionary x:Uid="ResourceDictionary_1"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Microsoft.VisualStudio.R.Package.DataInspect"
                    xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0">

    <!-- Data grid cell -->
    <Style x:Uid="Style_1" TargetType="{x:Type DataGridCell}">
        <Setter x:Uid="Setter_1" Property="Background" Value="{DynamicResource {x:Static vsui:TreeViewColors.BackgroundBrushKey}}" />
        <Setter x:Uid="Setter_2" Property="TextElement.Foreground" Value="{DynamicResource {x:Static vsui:TreeViewColors.BackgroundTextBrushKey}}" />
        <Setter x:Uid="Setter_3" Property="BorderThickness" Value="0" />
        <!-- Disable cell selection color -->
        <Setter x:Uid="Setter_4" Property="Padding" Value="1" />
        <!-- 1px of vertical padding between rows, including selection, 1px of internal padding -->
        <Setter x:Uid="Setter_5" Property="Template">
            <!-- Enable padding within cells -->
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_1" TargetType="{x:Type DataGridCell}">
                    <Border x:Uid="Border_1" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Uid="ContentPresenter_1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_1" Property="IsSelected" Value="True">
                <Setter x:Uid="Setter_6" Property="Background" Value="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemActiveBrushKey}}" />
                <Setter x:Uid="Setter_7" Property="TextElement.Foreground" Value="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemActiveTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Data grid header gripper -->
    <Style x:Uid="Style_2" x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter x:Uid="Setter_8" Property="Width" Value="8"/>
        <Setter x:Uid="Setter_9" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_10" Property="Cursor" Value="SizeWE"/>
        <Setter x:Uid="Setter_11" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type Thumb}">
                    <Border x:Uid="Border_2" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Data grid header -->
    <Style x:Uid="Style_3" TargetType="{x:Type DataGridColumnHeader}">
        <Setter x:Uid="Setter_12" Property="Padding" Value="4" />
        <Setter x:Uid="Setter_13" Property="BorderThickness" Value="0,0,1,1" />
        <Setter x:Uid="Setter_14" Property="BorderBrush" Value="{DynamicResource {x:Static vsui:HeaderColors.SeparatorLineBrushKey}}" />
        <Setter x:Uid="Setter_15" Property="Background"  Value="{DynamicResource {x:Static vsui:HeaderColors.DefaultBrushKey}}" />
        <Setter x:Uid="Setter_16" Property="Foreground" Value="{DynamicResource {x:Static vsui:HeaderColors.DefaultTextBrushKey}}" />
        <Setter x:Uid="Setter_17" Property="SeparatorBrush" Value="{DynamicResource {x:Static vsui:HeaderColors.SeparatorLineBrushKey}}" />
        <Style.Triggers>
            <Trigger x:Uid="Trigger_4" Property="IsPressed" Value="True">
                <Setter x:Uid="Setter_21" Property="Background"  Value="{DynamicResource {x:Static vsui:HeaderColors.MouseDownBrushKey}}" />
                <Setter x:Uid="Setter_22" Property="Foreground" Value="{DynamicResource {x:Static vsui:HeaderColors.MouseDownTextBrushKey}}" />
            </Trigger>
            <MultiTrigger x:Uid="MultiTrigger_1">
                <MultiTrigger.Conditions>
                    <Condition x:Uid="Condition_1" Property="IsMouseOver" Value="True" />
                    <Condition x:Uid="Condition_2" Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter x:Uid="Setter_23" Property="Background"  Value="{DynamicResource {x:Static vsui:HeaderColors.MouseOverBrushKey}}" />
                    <Setter x:Uid="Setter_24" Property="Foreground" Value="{DynamicResource {x:Static vsui:HeaderColors.MouseOverTextBrushKey}}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!-- Data grid row -->
    <Style x:Uid="Style_4" TargetType="{x:Type DataGridRow}" >
        <Setter x:Uid="Setter_25" Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}" />
        <!-- Enable full row selection look, even when there isnt a * width column -->
        <Style.Triggers>
            <Trigger x:Uid="Trigger_5" Property="IsSelected" Value="True">
                <Setter x:Uid="Setter_26" Property="Background" Value="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemActiveBrushKey}}" />
                <Setter x:Uid="Setter_27" Property="TextElement.Foreground" Value="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemActiveTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Data grid -->
    <Style x:Uid="Style_5" TargetType="{x:Type local:TreeGrid}">
        <Setter x:Uid="Setter_28" Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}" />
        <Setter x:Uid="Setter_34" Property="Foreground" Value="{DynamicResource {x:Static vsui:TreeViewColors.BackgroundTextBrushKey}}" />
        <!-- Dont show selection column-->
        <Setter x:Uid="Setter_29" Property="HeadersVisibility" Value="Column" />
        <Setter x:Uid="Setter_31" Property="BorderThickness" Value="1" />
        <Setter x:Uid="Setter_35" Property="BorderBrush" Value="{DynamicResource {x:Static vsui:HeaderColors.SeparatorLineBrushKey}}" />
        <!-- Only select one item -->
        <Setter x:Uid="Setter_32" Property="SelectionMode" Value="Single" />
        <!-- Selection is entire row -->
        <Setter x:Uid="Setter_33" Property="SelectionUnit" Value="FullRow" />

        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource {x:Static vsui:EnvironmentColors.GridLineBrushKey}}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource {x:Static vsui:EnvironmentColors.GridLineBrushKey}}" />
    </Style>
</ResourceDictionary>